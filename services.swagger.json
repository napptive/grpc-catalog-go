{
  "swagger": "2.0",
  "info": {
    "title": "catalog/services.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Catalog"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/catalog/add": {
      "post": {
        "summary": "Add a new application to the catalog.",
        "operationId": "Catalog_Add",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalog_commonOpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogAddApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/download": {
      "post": {
        "summary": "Download an application from the catalog.",
        "operationId": "Catalog_Download",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/catalogFileInfo"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of catalogFileInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogDownloadApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/info": {
      "post": {
        "summary": "Info returns the detail of a given application.",
        "operationId": "Catalog_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalogInfoApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogInfoApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/list": {
      "get": {
        "summary": "List the applications in the catalog.",
        "operationId": "Catalog_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalogApplicationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Namespace indicates that the list operation will only affect a given namespace. This value is optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/remove": {
      "post": {
        "summary": "Remove an application from the catalog.",
        "operationId": "Catalog_Remove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalog_commonOpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogRemoveApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    }
  },
  "definitions": {
    "catalogAddApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "ApplicationId with the identifier of an application using the\nsame approach as docker:\n[catalogURL/]namespace/appName[:tag]"
        },
        "file": {
          "$ref": "#/definitions/catalogFileInfo",
          "title": "Files with all the application files"
        }
      },
      "title": "AddApplicationRequest with a request to add an application to catalog"
    },
    "catalogApplicationList": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/catalogApplicationSummary"
          },
          "description": "Applications returned as part of a given query."
        }
      },
      "description": "ApplicationList with a subset of application summaries."
    },
    "catalogApplicationLogo": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "description": "Src with the URL to obtain the logo."
        },
        "type": {
          "type": "string",
          "title": "Type with the logo type (p.e: image/png)"
        },
        "size": {
          "type": "string",
          "title": "Size with the logo size (p.e. 120x120)"
        }
      },
      "title": "ApplicationLogo represents the application logo"
    },
    "catalogApplicationMetadata": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "title": "ApiVersion with the version of the metadata api"
        },
        "kind": {
          "type": "string",
          "title": "Kind with the kind of the metadata"
        },
        "name": {
          "type": "string",
          "title": "Name with the name of the application"
        },
        "version": {
          "type": "string",
          "title": "Version with the version of the application"
        },
        "description": {
          "type": "string",
          "title": "Description with the application description"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keywords assocaited with the application. In the future, these keywords will facilitate searches."
        },
        "license": {
          "type": "string",
          "description": "License associated with the application."
        },
        "url": {
          "type": "string",
          "description": "Url with application information."
        },
        "doc": {
          "type": "string",
          "description": "Doc with the application documentation URL."
        },
        "requires": {
          "$ref": "#/definitions/catalogApplicationRequirement",
          "description": "Requires with the application requirements."
        },
        "logo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/catalogApplicationLogo"
          },
          "description": "Logo of the application."
        }
      },
      "description": "ApplicationMetadata represents the metadata info as provided in the metadata.yaml file."
    },
    "catalogApplicationRequirement": {
      "type": "object",
      "properties": {
        "traits": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Traits with the application traits"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Scopes with the application scopes"
        },
        "k8s": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/catalogKubernetesEntities"
          },
          "title": "K8s with all the K8s entities needed"
        }
      },
      "description": "ApplicationRequirement with the application requirements in terms of scopes,\ntraits or CRD that are required for the application to run."
    },
    "catalogApplicationSummary": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace where the application is located."
        },
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application"
        },
        "tag_metadata_name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "TagMetadataName associated with the catalog entry. MetadataName indexed by tag"
        }
      },
      "title": "ApplicationSummary with a resume of an application"
    },
    "catalogDownloadApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "ApplicationId with the identifier of an application using the\nsame approach as docker:\n[catalogURL/]namespace/appName[:tag]"
        }
      },
      "title": "DownloadApplicationRequest with the request to download an application"
    },
    "catalogFileInfo": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path with the path of the file"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data with the file content"
        }
      },
      "title": "FileInfo represents all the information of an application file"
    },
    "catalogInfoApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "ApplicationId with the identifier of an application using the\nsame approach as docker:\n[catalogURL/]namespace/appName[:tag]"
        }
      },
      "title": "InfoApplicationRequest with the request to ask for an application"
    },
    "catalogInfoApplicationResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace where the application is located."
        },
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application"
        },
        "tag": {
          "type": "string",
          "description": "Tag associated with the catalog entry."
        },
        "metadata_file": {
          "type": "string",
          "format": "byte",
          "title": "MetadataFile with the content of metadata file"
        },
        "readme_file": {
          "type": "string",
          "format": "byte",
          "title": "ReadmeFile with the content of app_config file"
        },
        "metadata": {
          "$ref": "#/definitions/catalogApplicationMetadata",
          "title": "Metadata with the metadata object"
        }
      },
      "title": "InfoApplicationResponse with the response of an application"
    },
    "catalogKubernetesEntities": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "title": "ApiVersion with the entity version"
        },
        "kind": {
          "type": "string",
          "title": "Kind with the entity type"
        },
        "name": {
          "type": "string",
          "title": "Name with the entity name"
        }
      },
      "title": "KubernetesEntities with the application K8s entities"
    },
    "catalogRemoveApplicationRequest": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string",
          "title": "ApplicationId with the identifier of an application using the\nsame approach as docker:\n[catalogURL/]namespace/appName[:tag]"
        }
      },
      "title": "RemoveApplicationRequest with the request to remove an application"
    },
    "catalogSummaryResponse": {
      "type": "object",
      "properties": {
        "num_namespaces": {
          "type": "integer",
          "format": "int32",
          "title": "NumNamespaces with the number of users (namespaces) in the catalog"
        },
        "num_applications": {
          "type": "integer",
          "format": "int32",
          "title": "NumApplications with the number of different applications"
        },
        "num_tags": {
          "type": "integer",
          "format": "int32",
          "title": "NumTags wit the number of the different versions of applications"
        }
      },
      "title": "SummaryResponse with a summary of the number of applications in the catalog"
    },
    "catalog_commonOpResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/catalog_commonOpStatus",
          "description": "Status of the operation."
        },
        "status_name": {
          "type": "string",
          "description": "StatusName with the string representation of the status."
        },
        "user_info": {
          "type": "string",
          "description": "UserInfo with additional information to show to the user."
        }
      },
      "description": "OpResponse with a common definition for the result of executing an operation through gRPC. Notice that\nin case of an error, the call must fail unless the operation is executed asynchronously and this\nmessage contains the result of a past operation."
    },
    "catalog_commonOpStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SUCCESS"
      ],
      "default": "UNKNOWN",
      "description": "OpStatus enumeration defining the possible status of an operation.\n\n - UNKNOWN: Unknown operation status indicates an error in the processing of the request as all operations should\nhave a determined status.\n - SUCCESS: Success indicates that the operation was completed successfully."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
