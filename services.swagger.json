{
  "swagger": "2.0",
  "info": {
    "title": "catalog/services.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/catalog/add": {
      "post": {
        "summary": "Add a new application in the catalog",
        "operationId": "Catalog_Add",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalog_commonOpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogAddApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/download": {
      "post": {
        "summary": "Download an application from catalog",
        "operationId": "Catalog_Download",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/catalogFileInfo"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of catalogFileInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogDownloadApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/info": {
      "post": {
        "summary": "Info returns the detail of a given application",
        "operationId": "Catalog_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalogInfoApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogInfoApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/list": {
      "get": {
        "operationId": "Catalog_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalogApplicationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      }
    },
    "/v0/catalog/remove": {
      "post": {
        "summary": "Remove an application from the catalog",
        "operationId": "Catalog_Remove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/catalog_commonOpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/catalogRemoveApplicationRequest"
            }
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    }
  },
  "definitions": {
    "catalogAddApplicationRequest": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application\nThe Applicacion name uses the same approach as docker naming\n[catalogURL/]repoName/appName[:tag]"
        },
        "file": {
          "$ref": "#/definitions/catalogFileInfo",
          "title": "Files with all the application files"
        }
      },
      "title": "AddApplicationRequest with a request to add an application to catalog"
    },
    "catalogApplicationList": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/catalogApplicationSummary"
          }
        }
      },
      "title": "ApplicationList with a list of application resume"
    },
    "catalogApplicationSummary": {
      "type": "object",
      "properties": {
        "repository_name": {
          "type": "string",
          "title": "RepositoryName with the name of the repository"
        },
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application"
        },
        "tag": {
          "type": "string",
          "title": "Tag with the tag of the application"
        },
        "metadata_name": {
          "type": "string",
          "title": "MetadataName with the name defined in metadata file"
        }
      },
      "title": "ApplicationSummary with a resume of an application"
    },
    "catalogDownloadApplicationRequest": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application\nThe Applicacion name uses the same approach as docker naming\n[catalogURL/]repoName/appName[:tag]"
        }
      },
      "title": "DownloadApplicationRequest with the request to download an application"
    },
    "catalogFileInfo": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path with the path of the file"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data with the file content"
        }
      },
      "title": "FileInfo represents all the information of an application file"
    },
    "catalogInfoApplicationRequest": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application\n[catalogURL/]repoName/appName[:tag]"
        }
      },
      "title": "InfoApplicationRequest with the request to ask for an application"
    },
    "catalogInfoApplicationResponse": {
      "type": "object",
      "properties": {
        "repository_name": {
          "type": "string",
          "title": "RepositoryName with the name of the repository"
        },
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application"
        },
        "tag": {
          "type": "string",
          "title": "Tag with the tag of the application"
        },
        "medata_file": {
          "type": "string",
          "format": "byte",
          "title": "MetadataFile with the content of metadata file"
        },
        "app_conf_file": {
          "type": "string",
          "format": "byte",
          "title": "AppConfFile with the content of app_config file"
        }
      },
      "title": "InfoApplicationResponse with the response of an application"
    },
    "catalogRemoveApplicationRequest": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string",
          "title": "ApplicationName with the name of the application\n[catalogURL/]repoName/appName[:tag]"
        }
      },
      "title": "RemoveApplicationRequest with the request to remove an application"
    },
    "catalog_commonOpResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/catalog_commonOpStatus",
          "description": "Status of the operation."
        },
        "status_name": {
          "type": "string",
          "description": "StatusName with the string representation of the status."
        },
        "user_info": {
          "type": "string",
          "description": "UserInfo with additional information to show to the user."
        }
      },
      "description": "OpResponse with a common definition for the result of executing an operation through gRPC. Notice that\nin case of an error, the call must fail unless the operation is executed asynchronously and this\nmessage contains the result of a past operation."
    },
    "catalog_commonOpStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SUCCESS"
      ],
      "default": "UNKNOWN",
      "description": "OpStatus enumeration defining the possible status of an operation.\n\n - UNKNOWN: Unknown operation status indicates an error in the processing of the request as all operations should\nhave a determined status.\n - SUCCESS: Success indicates that the operation was completed successfully."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
